openapi: 3.0.0
info:
  title: Vizmaster AI
  version: 1.0.0

paths:
  users/administer/super_admin/:
    post:
      tags:
        - Admin Onboard
      summary: Super-Admin user creation/registration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: hajera+14@gleecus.com
                password1: Gleecus123
                password2: Gleecus123
                role_name: SuperAdmin
                username: Hajera14
                user_type: Administrator

      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          description: Authorization Token 
        - name: email
          in: body
          schema:
            type: string
          description: User Email address
        - name: password1
          in: body
          schema:
            type: string
          description: Set Password
        - name: password2
          in: body
          schema:
            type: string  
          description: Confirm Password              
        - name: role_name
          in: body
          schema:
            type: string 
          description: User Role <br> [Super Admin]
        - name: username
          in: body
          schema:
            type: string
          description: User name
        - name: user_type
          in: body
          schema:
            type: string
          description: Type of User <br>[Administrator]
                      
        
      responses:
        '201':
          description: Super Admin Created
          content:
            application/json:
              schema: 
                type : object
                example: 
                  "access": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzI4NDk3MTA2LCJpYXQiOjE3Mjg0OTM1MDYsImp0aSI6IjYzMTA2ZjRmZDY1ZjRhYmRiMWY3NTY0NmRlN2NlYjc2IiwidXNlcl9pZCI6NDd9.Xzd7OVkEQllo0F1eqXetwCIeKVJJMWNZjEtdS6rWOuA"
                  "refresh": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTcyODU3OTkwNiwiaWF0IjoxNzI4NDkzNTA2LCJqdGkiOiI2Yzg3NDEwNjljNTc0NzE5OTZhZGFiNmY1YmJjYzllMiIsInVzZXJfaWQiOjQ3fQ.uVnaS_9IrNnBCdPlUXe3PoaW-TTiQAQdZklzKENxrgM"
                  "user": 
                    "id": 47
                    "email": "hajera+14@gleecus.com"
                    "role_name": "SuperAdmin"
                    "status": "active"
                    "uuid": "3d80fa48-3f9c-4109-83c2-023257a7994d"
                    "user_type": "Administrator"
                    "username": "Hajera14"
                    "company": []
                    "user_data": []
                  "admin_details":
                    "id": 5
                    "user_auth":
                      "id": 47
                      "email": "hajera+14@gleecus.com"
                      "role_name": "SuperAdmin"
                      "status": "active"
                      "uuid": "3d80fa48-3f9c-4109-83c2-023257a7994d"
                      "user_type": "Administrator"
                      "username": "Hajera14"
                      "is_active": true

                    "uuid": "124beb97-9df2-4469-9781-881855d75c48"
                    "username": "Hajera14"
                    "first_name": null
                    "last_name": null
                    "role_name": "SuperAdmin"
                    "profile": null
                    "phone_number": null
                    "created_at": "2024-10-09T17:05:06.748570Z"
                    "updated_at": "2024-10-09T17:05:06.748577Z"
                    "created_by": "3d80fa48-3f9c-4109-83c2-023257a7994d"
                    "updated_by": "3d80fa48-3f9c-4109-83c2-023257a7994d"
                    "user": 47
        
        '400':
          description: Bad Request
          content:
            application/json: 
              schema:
                type: object
                example:
                  "message": "Data doesn't exist"
                  "data": "{'{field_name}[username or email]': [ErrorDetail(string='A user with that {field_name} already exists.', code='{field_name}_taken')]}"
              example:
                "message": "Data doesn't exist"
                "data": "{'username': [ErrorDetail(string='A user with that username already exists.', code='username_taken')]}"
        
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                example:
                  "message": "Resource not found"

        '405':
          description: Method not allwoed
          content:
            application/json:
              schema:
                type: object
                example:
                  "message": "Method \"GET\" not allowed."


  users/administer/register/:
    post:
      tags:
        - Admin Onboard
      summary: Admin user creation/registration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: hajera+5@gleecus.com
                password1: Gleecus123
                password2: Gleecus123
                role_name: Admin
                username: HajeraAdmin
                user_type: Administrator

      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          description: Authorization Token
        - name: email
          in: body
          schema:
            type: string
          description: User Email address
        - name: password1
          in: body
          schema:
            type: string
          description: Set Password
        - name: password2
          in: body
          schema:
            type: string  
          description: Confirm Password              
        - name: role_name
          in: body
          schema:
            type: string 
          description: User Role <br> [Admin]
        - name: username
          in: body
          schema:
            type: string
          description: User name
        - name: user_type
          in: body
          schema:
            type: string
          description: Type of User <br>[Administrator]

      responses:
        '201':
          description: Admin
          content:
            application/json:
              schema:
                type: object
                example:
                  "access": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzI4NTQ1MDE5LCJpYXQiOjE3Mjg1NDE0MTksImp0aSI6ImRkNjkxNGE1MjI0MDRkY2JiNGYzNjUwZDRjNDBlODljIiwidXNlcl9pZCI6NH0.K4TdviTSCjKXlswQrmzCVPUCLPXu_U0mUGHE9UXNXO0"
                  "refresh": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTcyODYyNzgxOSwiaWF0IjoxNzI4NTQxNDE5LCJqdGkiOiI5YjQ2YTg5ZWIwZWY0YjgwYjViZWJlN2FmZDllYTQzMCIsInVzZXJfaWQiOjR9.xSHlYAChguVJhD4G6oXUATh51tHZ2FS16i3sfN_6muU"
                  "user": 
                    "id": 4
                    "email": "hajera+5@gleecus.com"
                    "role_name": "Admin"
                    "status": "active"
                    "uuid": "0181d85c-3506-468b-b94b-90413689beb3"
                    "user_type": "Administrator"
                    "username": "HajeraAdmin"
                    "company": []
                    "user_data": []
                  "admin_details": 
                    "id": 2,
                    "user_auth": 
                      "id": 4
                      "email": "hajera+5@gleecus.com"
                      "role_name": "Admin"
                      "status": "active"
                      "uuid": "0181d85c-3506-468b-b94b-90413689beb3"
                      "user_type": "Administrator"
                      "username": "HajeraAdmin"
                      "is_active": true
                    "uuid": "6e49143b-0daf-4e9c-bc84-cb515110dd37"
                    "username": "HajeraAdmin"
                    "first_name": null
                    "last_name": null
                    "role_name": "Admin"
                    "profile": null
                    "phone_number": null
                    "created_at": "2024-10-10T06:23:39.256895Z"
                    "updated_at": "2024-10-10T06:23:39.256895Z"
                    "created_by": "d397a43b-be59-44bb-9d33-e0bb81c8592e"
                    "updated_by": "d397a43b-be59-44bb-9d33-e0bb81c8592e"
                    "user": 4

        '400':
          description: Bad Request
          content:
            application/json: 
              schema:
                type: object
                example:
                  "message": "Data doesn't exist"
                  "data": "{'{field_name}[username or email]': [ErrorDetail(string='A user with that {field_name} already exists.', code='{field_name}_taken')]}"
              example:
                "message": "Data doesn't exist"
                "data": "{'username': [ErrorDetail(string='A user with that username already exists.', code='username_taken')]}"

        '401':
          description: UnAuthorized
          content:
            application/json:
              schema:
                type: object
                example:
                  "message": "Authentication credentials were not provided."

        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                example:
                  "message": "You do not have permission to perform this action."
        
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                example:
                  "message": "Resource not found"

        '405':
          description: Method not allwoed
          content:
            application/json:
              schema:
                type: object
                example:
                  "message": "Method \"GET\" not allowed."